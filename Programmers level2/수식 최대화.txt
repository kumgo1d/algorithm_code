import java.util.*;
class Solution {
    static char[] operators = { '+', '*', '-' };
    static boolean[] check = new boolean[3];
    
    public long solution(String expression) {
        long answer = 0;
        
        List<Long> numbers = new ArrayList<>();
        List<Character> op = new ArrayList<>();
        List<Long> result = new ArrayList<>();

        splitExpression(numbers, op, expression);
        operation(result, numbers, op, 0, new char[3]);

        for(int i = 0; i < result.size(); i++) {
            answer = Math.max(result.get(i), answer);
        }
        
        return answer;
        
    }
    
    public void splitExpression(List<Long> numbers, List<Character> op, String expression) {
        StringBuilder sb = new StringBuilder();
        for(int i = 0 ; i < expression.length(); i++) {
            if(48 <= expression.charAt(i) && expression.charAt(i) <= 57) {
                sb.append(expression.charAt(i));
            } else {
                op.add(expression.charAt(i));
                numbers.add(Long.parseLong(sb.toString()));
                sb = new StringBuilder();
            }

            if(i == expression.length()-1) {
                numbers.add(Long.parseLong(sb.toString()));
            }
        }
    }

    public void operation(List<Long> result, List<Long> numbers, List<Character> op, int count, char[] arr) {
        //연산자 우선순위 분리, 계산
        if(count == 3) {
            ArrayList<Long> numList = new ArrayList<>(numbers);
            ArrayList<Character> operList = new ArrayList<>(op);

            for(int i = 0; i < arr.length; i++) {
                for(int j = 0; j < operList.size(); j++) {
                    if(arr[i] == operList.get(j)) {
                        long r = calculate(arr[i], numList.remove(j), numList.remove(j));
                        numList.add(j, r);
                        operList.remove(j);
                        j--;
                    }
                }
            }
            result.add(Math.abs(numList.get(0)));
        }

        for(int i = 0; i < 3; i++) {
            if(!check[i]) {
                check[i] = true;
                arr[count] = operators[i];
                operation(result, numbers, op, count + 1, arr);
                check[i] = false;
            }
        }
    }

    public long calculate(char operator, long o1, long o2) {
        long result = 0L;

        if(operator == '+') {
            result = o1 + o2;
        } else if(operator == '*') {
            result = o1 * o2;
        } else {
            result = o1 - o2;
        }

        return result;
    }
}