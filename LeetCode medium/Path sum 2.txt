class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> answer = new ArrayList<>();
        if(root == null) return answer;
        dfs(answer, root, new ArrayList<>(), sum);

        return answer;
    }
    public void dfs(List<List<Integer>> answer, TreeNode node, List<Integer> list, int sum) {
        if(node.left == null && node.right == null) {
            if(sum-node.val == 0) answer.add(list);
        }

        int num = sum - node.val;
        list.add(node.val);
        if(node.left != null) {
            dfs(answer, node.left, new ArrayList<>(list), num);            
        }
        if(node.right != null) {
            dfs(answer, node.right, new ArrayList<>(list), num);
        }
    }
}