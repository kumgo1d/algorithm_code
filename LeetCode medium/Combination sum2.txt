class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> answer = new ArrayList<>();
        Arrays.sort(candidates);
        helper(answer, candidates, new ArrayList<>(), 0, 0, target);
        return answer;
    }
    public void helper(List<List<Integer>> answer, int[] nums, List<Integer> list, int index, int sum, int target) {
        if(sum == target) {
            answer.add(new ArrayList<>(list));
            return;
        }

        if(sum < target) {
            for(int i = index; i < nums.length; i++) {
                list.add(nums[i]);
                helper(answer, nums, list, i+1, sum+nums[i], target);
                list.remove(list.size()-1);
                while(i < nums.length-1 && nums[i] == nums[i+1]) {
                    i++;
                }
            }
        }
    }
}정답 참고